// Generated by CoffeeScript 1.12.4
var exists, fs, isDir, isFile, isLink, path, readDir, readFile, readLink, removeFile, writeDir, writeFile, writeLink;

path = require("path");

fs = require("fs");

exists = function(filePath) {
  var result;
  try {
    result = fs.lstatSync(filePath);
  } catch (error) {}
  return result !== void 0;
};

isDir = function(filePath) {
  var result;
  try {
    result = fs.statSync(filePath).isDirectory();
  } catch (error) {}
  return result === true;
};

isFile = function(filePath) {
  var result;
  try {
    result = fs.statSync(filePath).isFile();
  } catch (error) {}
  return result === true;
};

isLink = function(filePath) {
  var result;
  try {
    result = fs.lstatSync(filePath).isSymbolicLink();
  } catch (error) {}
  return result === true;
};

readDir = function(dirPath) {
  return fs.readdirSync(dirPath);
};

readFile = function(filePath, encoding) {
  if (encoding === void 0) {
    encoding = "utf8";
  }
  return fs.readFileSync(filePath, encoding);
};

readLink = function(linkPath) {
  return fs.readlinkSync(linkPath);
};

writeDir = function(dirPath) {
  if (isDir(dirPath)) {
    return;
  }
  writeDir(path.dirname(dirPath));
  return fs.mkdirSync(dirPath);
};

writeFile = function(filePath, string) {
  return fs.writeFileSync(filePath, string);
};

writeLink = function(linkPath, targetPath) {
  return fs.symlinkSync(targetPath, linkPath);
};

removeFile = function(filePath) {
  return fs.unlinkSync(filePath);
};

module.exports = {
  exists: exists,
  isDir: isDir,
  isFile: isFile,
  isLink: isLink,
  readDir: readDir,
  readFile: readFile,
  readLink: readLink,
  writeDir: writeDir,
  writeFile: writeFile,
  writeLink: writeLink,
  removeFile: removeFile
};
